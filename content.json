{"meta":{"title":"ZZZのPB","subtitle":"技术 | 生活","description":"","author":"zzz","url":"https://jh-ys.github.io","root":"/"},"pages":[],"posts":[{"title":"动态生成计时器","slug":"动态生成计时器","date":"2020-09-21T14:12:49.950Z","updated":"2020-09-22T03:11:11.774Z","comments":true,"path":"2020/09/21/动态生成计时器/","link":"","permalink":"https://jh-ys.github.io/2020/09/21/%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E8%AE%A1%E6%97%B6%E5%99%A8/","excerpt":"","text":"动态生成任意个计时器（可开始和停止） keywords：闭包 事件绑定/解绑 Jquery 动态生成代码如下：index.html12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"box\"&gt; &lt;/div&gt;&lt;/body&gt;&lt;script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\"&gt;&lt;/script&gt;&lt;script src=\"index.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt; let box = $(\"#box\"); let num = 100; timerAdd(box,num);&lt;/script&gt;&lt;/html&gt; index.js12345678910111213141516171819202122232425262728293031323334353637function timerAdd(obj,number)&#123; for(let i=0;i&lt;number;i++)&#123; obj.append(getTimerEle(i)); &#125; function timerFunc(i) &#123; let time =1,timer; function func() &#123; obj.off(\"click\", \"#btn_start\"+i);//必须一开始就解绑，不然多次点击就会多次执行，计时就会加地很快 obj.on('click',\"#btn_stop\"+i,\"\",function()&#123; clearTimeout(timer); obj.off('click',\"#btn_start\"+i);//必须每次点击停止要清除掉开始计时的绑定，不然多次点击会绑定多个func，一执行就都执行。 obj.on('click',\"#btn_start\"+i,\"\",func); &#125; ); circle(); function circle()&#123; timer = setTimeout(function () &#123; $(\"#time\" + i).html(\"time:\"+time); time++; circle() &#125;, 1000) &#125; &#125; return func; &#125; function getTimerEle(i)&#123; let item = \"\"; item+=\"&lt;div style='font-size: 20px;margin-top: 10px;display: block;position: relative' id='timer\"+i+\"'&gt;\"; item+=\"&lt;p style='margin: 0;user-select: none;display: inline-block;inline-block;position: absolute' id='time\"+i+\"'&gt;time:0&lt;/p&gt;\"; item+=\"&lt;button style='user-select: none;font-size: 20px;margin-left: 120px;position: absolute' id='btn_start\"+i+\"'&gt;开始计时&lt;/button&gt;\"; item+=\"&lt;button style='user-select: none;font-size: 20px;margin-left: 220px;' id='btn_stop\"+i+\"'&gt;停止&lt;/button&gt;\"; item+=\"&lt;/div&gt;\"; obj.on('click',\"#btn_start\"+i,\"\", timerFunc(i)); return item; &#125;&#125; 效果图如下：","categories":[],"tags":[]},{"title":"公交年检项目开发小结","slug":"公交年检项目开发小结","date":"2020-09-07T16:00:16.544Z","updated":"2020-09-21T15:38:36.425Z","comments":true,"path":"2020/09/08/公交年检项目开发小结/","link":"","permalink":"https://jh-ys.github.io/2020/09/08/%E5%85%AC%E4%BA%A4%E5%B9%B4%E6%A3%80%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%B0%8F%E7%BB%93/","excerpt":"","text":"技术总结 一、实名认证页面（RealNameAuthentication.html）1.相机拍照蒙层，前端不易实现解决：用原生代码来解决的。进入拍摄界面，js所调用函数如下（该函数包含网络请求）1234567891011121314151617function idCardPut(ruid, okCallback, failCallback, errorCallback) &#123; var success = function(result) &#123; var response = JSON.parse(result); if (response.meta.code === 0 &amp;&amp; okCallback) &#123; okCallback(response.meta, response.data) &#125; else if (failCallback) &#123; failCallback(response.meta, response.data) &#125; &#125; var failed = function(msg) &#123; if (errorCallback) errorCallback(msg); &#125; var callbackId = plus.bridge.callbackId(success, failed); plus.bridge.exec('ApiClient', 'idCardPut', [callbackId, '/user/auth/idcard/upload', '', ruid]);&#125; 二、人保购险页面（PersonalInsurancePay.html）1.通过支付链接所打开的页面，若未支付，无法返回到人保购险页面解决：打开带原生导航栏的页面（点击导航栏的按钮可返回）12345678910111213payWebview = mui.openWindow(&#123; id: 'pay_page', url: 'LoadingPage.html', styles: &#123; titleNView: &#123; style: 'transparent', backgroundColor: '#FFFFFF', titleText: '保单支付', titleColor: '#000000', autoBackButton: true, &#125; &#125; &#125;); 2.支付接口回调的响应时间太长（大概一分钟），采用此方法用户体验很差解决：采用轮询的方式，设置一个定时器，支付链接页面加载完成后调用该定时器，每隔3s查询一次保单的支付状态（注：页面关闭时进行完最后一次支付状态的查询再关闭定时器）1234567// 设置一个定时器，点击支付按钮后，轮询支付情况 function pollingCheckPay() &#123; setTimeout(function() &#123; getInfoOfPolicy(gGetInfor.policy_number, checkPayCallback); &#125;, 3000); &#125;// 三、mui的一些坑1.提示框的效果不行，应该是代码最后没加上’div’1234//可能你是这样写的mui.alert(msg, \"提示\", ['确定'], function() &#123;&#125;)//加上'div'才有样式，该参数是指是否使用h5绘制的对话框mui.alert(msg, \"提示\", ['确定'], function() &#123;&#125;,'div') 2.mui的确认框confirm使用123456789//关于确认框confirm回调函数，mui文档没细说。若有两个选项，回调函数中，e.index为0是右边的那个选项（‘确认’），为1则为左边的那个选项（‘信息有误’）。mui.confirm(getConfirmMsg(val), \"请确认身份信息\", [\"信息有误\", '确认'], function(e) &#123; if (e.index === 0) &#123; take_photo(ruid); &#125; else if (e.index === 1) &#123; mui.showLoading(\"正在加载..\", \"div\"); infoConfirm(\"id_card\", ruid, buid); &#125; &#125;, \"div\") 3.mui预加载的目标页面，不可用mui.openWindow传参1234567891011121314mui.init(&#123; preloadPages: [&#123; id: 'PersonalInfo', url: 'PersonalInfo.html', &#125;]&#125;);mui.openWindow(&#123; id: 'PersonalInfo', url: 'PersonalInfo.html', extras:&#123; name:'小明' &#125;&#125;);//预加载了的目标页面即PersonalInfo.html就获取不到数据&#123;name:'小明'&#125; 项目总结 收获1.即时和开发团队成员沟通很重要，沟通的效率会决定自己对项目的理解，以及开发的效率，好的沟通可以加快开发的速度且可减少代码更改量；2.项目开发前的准备工作很重要，一开始未梳理清楚整个页面流程，导致一开始效率较低，且开发乏力，应一开始就提醒大家开个会，理清楚页面间逻辑;3.混合开发，一开始不清楚和涉及自己任务的其他人的任务的衔接（如拍照页面)，一开始该问和自己任务相关的人到底在做什么，大概负责的内容是什么;4.以测试和上线为中心很重要，自己的页面可能还有点问题，在要测试的时候应以测试为中心，若阻挡测试流程，应注释掉自己的问题代码，或先砍掉自己的有问题的功能，以便整个项目流程能够正常测试和正常上线；","categories":[],"tags":[]},{"title":"summer-plan-in-2020","slug":"summer-plan-in-2020","date":"2020-07-08T18:37:30.970Z","updated":"2020-09-21T14:53:12.923Z","comments":true,"path":"2020/07/09/summer-plan-in-2020/","link":"","permalink":"https://jh-ys.github.io/2020/07/09/summer-plan-in-2020/","excerpt":"","text":"先胜而后战 熟练掌握nodejs,react(理解分析其源码),threejs,数据库 较熟练掌握java及常用后端框架（springboot mybaties）,爬虫(nodejs爬虫，py爬虫) 另需重新学习数据结构，c++(mfc项目)，计算机组成原理，python 了解及尝试app的开发流程","categories":[],"tags":[]},{"title":"hello-world","slug":"hello-world","date":"2020-04-20T08:06:33.762Z","updated":"2020-09-21T15:22:08.286Z","comments":true,"path":"2020/04/20/hello-world/","link":"","permalink":"https://jh-ys.github.io/2020/04/20/hello-world/","excerpt":"","text":"time to face the future","categories":[],"tags":[]}],"categories":[],"tags":[]}